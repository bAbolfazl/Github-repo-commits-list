{"version":3,"sources":["redux/user/user.types.js","redux/commit/commit.types.js","redux/commit/commit.actions.js","components/customInput/customInput.component.jsx","redux/user/user.actions.js","containers/loginForm/loginForm.container.jsx","pages/login/login.page.jsx","containers/passwordForm/passwordForm.components.jsx","pages/password/password.page.jsx","components/logoutBtn/logoutBtn.styles.js","components/logoutBtn/logoutBtn.component.jsx","containers/header/header.styles.js","containers/header/header.container.jsx","redux/commit/commit.selectors.js","containers/repoForm/repoForm.container.jsx","pages/repo/repo.page.jsx","redux/user/user.selectors.js","components/spinner/spinner.styles.jsx","components/spinner/spinner.component.jsx","HOC/WithSpinner.component.jsx","components/commitItem/commitItem.styles.js","components/commitItem/commitItem.component.jsx","pages/commit/CommitPage.page.jsx","containers/commitList/commitList.component.jsx","pages/notFound/NotFoundPage.page.jsx","App.js","reportWebVitals.js","redux/user/user.reducer.js","redux/commit/commit.reducer.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["user_actionTypes","SET_USERNAME","SET_PASS","SET_AUTH","commit_actionTypes","SET_REPO","SET_COMMITS","setRepo","repo","type","payload","handle_state","e","state","setPass","setUsername","value","target","connect","dispatch","username","pass","label","others","className","onChange","placeholder","LoginForm","to","LoginPage","PasswordForm","PasswordPage","BtnS","styled","button","LogoutBtn","HeaderS","header","Header","selectCommit","commit","selectCommitRepo","createSelector","selectCommitList","commits","mapStateToProps","createStructuredSelector","RepoPage","selectUserUsername","user","SpinnerOverlay","div","SpinnerContainer","Spinner","WithSpinner","WrappedComponent","isLoading","otherProps","console","log","CommitItemS","CommitItem","author","src","avatar_url","alt","name","message","CommitListWithSpinner","sha","url","index","href","setCommits","commmits","match","useState","commtPage_isLoading","setCommtPage_isLoading","useEffect","a","params","fetch","then","res","json","catch","err","fetching","length","map","NotFoundPage","App","exact","path","component","CommitPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","auth","rootReducer","action","combineReducers","middleWares","logger","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1f6e15ea.chunk.js","sourcesContent":["const user_actionTypes = {\r\n    SET_USERNAME: 'SET_USERNAME',\r\n    SET_PASS: 'SET_PASS',\r\n    SET_AUTH: 'SET_AUTH'\r\n}\r\n\r\nexport default user_actionTypes"," const commit_actionTypes = {\r\n    SET_REPO: 'SET_REPO',\r\n    SET_COMMITS: 'SET_COMMITS',\r\n}\r\n\r\nexport default commit_actionTypes","import commit_actionTypes from './commit.types'\r\n\r\nexport const setRepo = (repo) => ({\r\n    type: commit_actionTypes.SET_REPO,\r\n    payload: repo,\r\n})\r\n\r\nexport const setCommits = (commits) => ({\r\n    type: commit_actionTypes.SET_COMMITS,\r\n    payload: commits\r\n})","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setUsername, setPass } from '../../redux/user/user.actions';\r\nimport { setRepo } from '../../redux/commit/commit.actions';\r\n\r\n\r\n\r\nconst CustomInput = ({ label, state, setPass, setUsername, setRepo, ...others }) => (\r\n    <div>\r\n        <label >\r\n            <span className=\"font-weight-bold\">{label}</span>\r\n            <input onChange={(e) => handle_state(e, state, setPass, setUsername, setRepo)}\r\n                className=\"form-control mt-2\" placeholder={`your ${label}`} {...others} />\r\n        </label>\r\n    </div>\r\n);\r\n\r\nconst handle_state = (e, state, setPass, setUsername, setRepo) => {\r\n    const value = e.target.value\r\n    switch (state) {\r\n        // case 'username':\r\n        //     setUsername(value)\r\n        //     break;\r\n        // case 'pass':\r\n        //     setPass(value)\r\n        //     break;\r\n        case 'repo':\r\n            setRepo(value)\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setUsername: username => dispatch(setUsername(username)),\r\n    setPass: pass => dispatch(setPass(pass)),\r\n    setRepo: repo => dispatch(setRepo(repo))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(CustomInput);","import user_actionTypes from './user.types'\r\n\r\nexport const setUsername = (username) => ({\r\n    type: user_actionTypes.SET_USERNAME,\r\n    payload: username\r\n})\r\n\r\nexport const setPass = (pass) => ({\r\n    type: user_actionTypes.SET_PASS,\r\n    payload: pass\r\n})\r\n\r\nexport const setAuth = (status) => ({\r\n    type: user_actionTypes.SET_AUTH,\r\n    payload: status\r\n})","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CustomInput from '../../components/customInput/customInput.component';\r\n\r\nconst LoginForm = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            NOTE: Plese Enter \"BAbolfazl\"\r\n            <CustomInput  type='text' label=\"Github username\" state='username' value=\"BAbolfazl\" />\r\n            <Link to='/password'>\r\n                <button className=\"btn btn-primary w-50 mt-4\">next</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\n\r\nimport LoginForm from '../../containers/loginForm/loginForm.container';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <div className='d-flex align-items-center justify-content-center my-5'>\r\n            <LoginForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport CustomInput from '../../components/customInput/customInput.component';\r\n\r\nconst PasswordForm = () => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            NORE: Doesn't matter\r\n            <CustomInput type='password' label=\"Github password\" state='pass' value=\"1234\" />\r\n            <Link to='/repo'>\r\n                <button className=\"btn btn-primary w-50 mt-4\">login</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const handle_login_click = () => {\r\n//     const data = {\r\n//         client_id: process.env.REACT_APP_CLIENT_ID,\r\n//         redirect_uri: process.env.REACT_APP_REDIRECT_URI,\r\n//         client_secret: process.env.client_secret,\r\n//         scope: 'user',\r\n//         // code: newUrl[1]\r\n//     }\r\n//     fetch('https://github.com/login/oauth/authorize', {\r\n//         method: 'POST',\r\n//         accept: 'application/json',\r\n//         contentType: 'application/x-www-form-urlencoded', \r\n//         body: JSON.stringify(data)\r\n//     })\r\n//     .then(res=>res.json())\r\n//     .then(console.log)\r\n//     .catch(err=>console.log(err.message))\r\n// }\r\n\r\nexport default PasswordForm;","import React from 'react';\r\n\r\nimport PasswordForm from '../../containers/passwordForm/passwordForm.components';\r\n\r\nconst PasswordPage = () => {\r\n    return (\r\n        <div className='d-flex align-items-center justify-content-center my-5'>\r\n            <PasswordForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordPage ;","import styled from 'styled-components'\r\n\r\nconst BtnS = styled.button`\r\n    border-radius: 5px;\r\n    color: gray;\r\n    background-color: orange;\r\n`\r\n\r\nexport {BtnS}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { BtnS } from './logoutBtn.styles';\r\n\r\nconst LogoutBtn = () => {\r\n    return (\r\n        <div>\r\n            <Link to='/login'>\r\n                <BtnS className=\"btn\">\r\n                    logOut\r\n            </BtnS>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogoutBtn;","import styled from 'styled-components'\r\n\r\nconst HeaderS = styled.header`\r\n\r\n    background-color: gray;\r\n\r\n`\r\n\r\nexport {HeaderS}","import React from 'react';\r\n\r\nimport LogoutBtn from '../../components/logoutBtn/logoutBtn.component';\r\nimport { HeaderS } from './header.styles';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderS className=\"d-flex align-items-center justify-content-around py-4 mb-4\">\r\n            <h1>Github Commits List</h1>\r\n            <LogoutBtn />\r\n        </HeaderS>\r\n    );\r\n};\r\n\r\nexport default Header;","import { createSelector } from 'reselect'\r\n\r\nexport const selectCommit = (state) => state.commit\r\n\r\nexport const selectCommitRepo = createSelector(\r\n    selectCommit,\r\n    (state) => state.repo ? state.repo : null\r\n)\r\n\r\nexport const selectCommitList = createSelector(\r\n    selectCommit,\r\n    state => state.commits ? state.commits : null\r\n)","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCommitRepo } from '../../redux/commit/commit.selectors';\r\n\r\nimport CustomInput from '../../components/customInput/customInput.component';\r\n\r\nconst RepoForm = ({ repo }) => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div>NOTE: choose from one of these Abolfazl's repo and type it down ['robots-list', 'blogengine', 'Quera', 'sport-club', 'dictionary', ']</div>\r\n            <CustomInput type='text' label=\"Github repository\" state=\"repo\" />\r\n            <Link to={`/repo/${repo ? repo: null}`}>\r\n                <button className=\"btn btn-primary w-50 mt-4\">Sumbit</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    repo: selectCommitRepo\r\n})\r\n\r\nexport default connect(mapStateToProps)(RepoForm);","import React from 'react';\r\nimport RepoForm from '../../containers/repoForm/repoForm.container';\r\n\r\nconst RepoPage = () => {\r\n    return (\r\n\r\n        <div className='d-flex align-items-center justify-content-center my-5'>\r\n            <RepoForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RepoPage;","import { createSelector } from 'reselect'\r\n\r\nconst selectUser = state => state.user\r\n\r\nexport const selectUserUsername = createSelector(\r\n    selectUser,\r\n    user => user.username\r\n)\r\n\r\n// export const selectUser","import styled from \"styled-components\";\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from \"./spinner.styles\";\r\n// alert(\"hi\");\r\nconst Spinner = () => {\r\n  return (\r\n    <SpinnerOverlay>\r\n      <SpinnerContainer />\r\n    </SpinnerOverlay>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nimport Spinner from \"../components/spinner/spinner.component\";\r\n\r\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  //   alert(isLoading);\r\n  console.log('isLoading',isLoading)\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from 'styled-components'\r\n\r\nconst CommitItemS = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n\r\n    .img {\r\n        width: 25px;\r\n        height: 25px;\r\n        border-radius: 100%;\r\n        overflow: hidden;\r\n    }\r\n`\r\n\r\nexport {CommitItemS}","import React , {Fragment} from 'react';\r\nimport { CommitItemS } from './commitItem.styles';\r\n\r\nconst CommitItem = ({ author, commit }) => {\r\n    return (\r\n        <div>\r\n            <CommitItemS className='btn'>\r\n                <img className=\"img\" src={author.avatar_url} alt=\"\" />\r\n                <span className='ml-2'>{commit.author.name}</span>\r\n                <span className='ml-2 small text-muted'>{commit.message}</span>\r\n            </CommitItemS>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommitItem;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport { selectCommitRepo, selectCommitList } from '../../redux/commit/commit.selectors'\r\nimport { selectUserUsername } from '../../redux/user/user.selectors'\r\n\r\nimport { setCommits, setRepo } from '../../redux/commit/commit.actions'\r\n\r\nimport WithSpinner from '../../HOC/WithSpinner.component';\r\nimport CommitList from '../../containers/commitList/commitList.component';\r\n\r\nconst CommitListWithSpinner = WithSpinner(CommitList)\r\n\r\n\r\nconst CommitPage = ({ match, selectCommitRepo, selectUserUsername, setCommits, setRepo, selectCommitList }) => {\r\n\r\n    const [commtPage_isLoading, setCommtPage_isLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetching = async () => {\r\n            // alert('ss')\r\n            setCommtPage_isLoading(true)\r\n            await setRepo(match.params.name)\r\n            // await console.log(selectCommitRepo)\r\n\r\n            // if(!selectCommitRepo) return\r\n            await fetch(`https://api.github.com/repos/${selectUserUsername}/${match.params.name}/commits`)\r\n                .then(res => res.json())\r\n                // .then(console.log)\r\n                .then(res => setCommits(res))\r\n                .then(setCommtPage_isLoading(false))\r\n                .catch(err => { console.log(err.message) })\r\n        }\r\n        fetching()\r\n\r\n        return () => {\r\n            setCommtPage_isLoading(true)\r\n            // alert('unmo')\r\n        }\r\n    }, [])\r\n\r\n    let x = 0\r\n    // if(commtPage_isLoading)alert(commtPage_isLoading)`\r\n    // alert(commtPage_isLoading)\r\n    return (\r\n        <div className='container text-center'>\r\n            {\r\n                // console.log(selectCommitList == false)\r\n                selectCommitList.length ?\r\n                    selectCommitList.map(({ author, commit, url, sha }, index) => (\r\n                        <CommitListWithSpinner isLoading={commtPage_isLoading} author={author} commit={commit} url={url} sha={sha} index={index + 1} />\r\n                    ))\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    selectUserUsername: selectUserUsername,\r\n    selectCommitRepo: selectCommitRepo,\r\n    selectCommitList: selectCommitList\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCommits: (commmits) => dispatch(setCommits(commmits)),\r\n    setRepo: repo => dispatch(setRepo(repo))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommitPage);","import React from 'react';\r\nimport CommitItem from '../../components/commitItem/commitItem.component';\r\n\r\nconst CommitList = ({sha,url,commit,author, index}) => {\r\n    return (\r\n        <div>\r\n            <a key={sha} href={url} className='my-3 d-flex align-items-center' >\r\n                <span className='mr-2'>{index}</span>\r\n                {/* {console.log('commtPage_isLoading', commtPage_isLoading)} */}\r\n                <CommitItem author={author} commit={commit} />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommitList;","import React from 'react';\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div>\r\n            404\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","// import logo from './logo.svg';\nimport './App.css';\n\nimport { Route, Switch } from 'react-router-dom'\n\n\nimport LoginPage from './pages/login/login.page'\nimport PasswordPage from './pages/password/password.page'\nimport Header from './containers/header/header.container'\nimport RepoPage from './pages/repo/repo.page';\nimport CommitPage from './pages/commit/CommitPage.page';\nimport NotFoundPage from './pages/notFound/NotFoundPage.page';\n\n\nfunction App() {\n\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path='/login' component={LoginPage} />\n\n        {/* <Route render={() => <Redirect to='login' />} /> */}\n\n        <Route exact path='/password' component={PasswordPage} />\n        <Route exact path='/repo/:name' component={CommitPage} />\n        <Route exact path='/repo' component={RepoPage} />\n\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import user_actionTypes from './user.types'\r\n\r\nconst INITIAL_STATE = {\r\n    username: 'babolfazl',\r\n    pass: '1234',\r\n    auth: true,\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case user_actionTypes.SET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload\r\n            }\r\n        case user_actionTypes.SET_PASS:\r\n            return {\r\n                ...state,\r\n                pass: action.payload\r\n            }\r\n        case user_actionTypes.SET_AUTH:\r\n            return {\r\n                ...state,\r\n                auth: action.payload\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default userReducer","import commit_actionTypes from './commit.types'\r\n\r\nconst INITIAL_STATE = {\r\n    repo: '',\r\n    commits: []\r\n}\r\n\r\nconst commitReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case commit_actionTypes.SET_REPO:\r\n            return {\r\n                ...state,\r\n                repo: action.payload\r\n            }\r\n        case commit_actionTypes.SET_COMMITS:\r\n            return {\r\n                ...state,\r\n                commits: action.payload\r\n            }\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default commitReducer","import { combineReducers } from 'redux'\r\n\r\nimport userReducer from './user/user.reducer'\r\nimport commitReducer from './commit/commit.reducer'\r\n\r\nconst rootReducer = {\r\n    user: userReducer,\r\n    commit: commitReducer,\r\n}\r\n\r\nexport default combineReducers(rootReducer)","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport { logger } from 'redux-logger'\r\n\r\nimport rootReducer from './root.reducer'\r\n\r\nconst middleWares = [logger]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleWares))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'reset-css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename='/'>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}